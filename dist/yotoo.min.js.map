{"version":3,"file":"/dist/yotoo.min.js","mappings":"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","sources":["webpack://yotoojs/./src/yotoo.js"],"sourcesContent":["/**\r\n  * YotooJS - YouTube Video Fetcher\r\n  * @version 1.1.2\r\n  * @author Victor Ribeiro <https://github.com/ojvribeiro>\r\n  * @licence MIT\r\n  */\r\n\r\n\r\nconst yotoo = {\r\n  /**\r\n    * @param {string|Object} props - The video URL or the options object\r\n    * @param {function} callback - The callback function when video is loaded\r\n  */\r\n  get: (props, callback) => {\r\n    if (yotoo.apiKey && yotoo.apiKey !== '') {\r\n      let videoArray = []\r\n\r\n      if (props instanceof Array) {\r\n        props.forEach(item => {\r\n          const videoId = getVideoId(item)\r\n\r\n          videoArray.push(videoId)\r\n        })\r\n      }\r\n      else {\r\n        if (typeof props === 'string') {\r\n          const videoId = getVideoId(props)\r\n\r\n          videoArray.push(videoId)\r\n        }\r\n        else {\r\n          if (props.url instanceof Array) {\r\n            props.url.forEach(item => {\r\n              const videoId = getVideoId(item)\r\n\r\n              videoArray.push(videoId)\r\n            })\r\n          }\r\n          else {\r\n            videoUrl = props.url\r\n\r\n            const videoId = getVideoId(props.url)\r\n\r\n            videoArray.push(videoId)\r\n          }\r\n        }\r\n      }\r\n\r\n      const ytapi = {\r\n        endpoint: 'https://www.googleapis.com/youtube/v3/videos',\r\n        part: 'id%2C+snippet%2C+contentDetails',\r\n      }\r\n\r\n      // Initialize empty idList\r\n      ytapi.idList = ''\r\n\r\n      for (let index in videoArray) {\r\n        if (index < videoArray.length) {\r\n          ytapi.idList += `id=${videoArray[index]}&`\r\n        } else {\r\n          ytapi.idList += `id=${videoArray[index]}`\r\n        }\r\n      }\r\n\r\n      function getVideoId(videoUrl) {\r\n        const id = videoUrl.replace(/(.*?)(?:youtube\\.[a-z]+\\/[a-z\\?\\&]*v[/|=]|youtu\\.be\\/)([0-9a-zA-Z-_]+)/g, '$2')\r\n        return id\r\n      }\r\n\r\n      yotoo.fetch(`${ytapi.endpoint}?part=${ytapi.part}&${ytapi.idList}&key=${yotoo.apiKey}`)\r\n\r\n      // Get the video info\r\n      .then(response => {\r\n        let video = []\r\n        const data = response.items\r\n\r\n        data.forEach(item => {\r\n          video.push({\r\n            id: item.id,\r\n\r\n            title: item.snippet.title,\r\n\r\n            description: item.snippet.description,\r\n\r\n            date: new Date(item.snippet.publishedAt),\r\n\r\n            tags: item.snippet.tags,\r\n\r\n            thumb: {\r\n              default: item.snippet.thumbnails.default.url,\r\n              sd: item.snippet.thumbnails.medium.url,\r\n              hd: item.snippet.thumbnails.high.url,\r\n            },\r\n\r\n            url: `https://www.youtube.com/watch?v=${item.id}`,\r\n            shortUrl: `https://youtu.be/${item.id}`,\r\n            embedUrl: `https://www.youtube.com/embed/${item.id}`,\r\n          })\r\n        })\r\n\r\n        return video\r\n      })\r\n\r\n      .then(video => {\r\n        if (typeof props === 'object') {\r\n          if (props.debug === true) {\r\n            console.log('videoProps: ', video)\r\n          }\r\n        }\r\n\r\n        if (callback) callback(video)\r\n      })\r\n\r\n      .catch(error => {\r\n        throw new Error('Ocorreu um erro ao carregar o vÃ­deo: ', error)\r\n      })\r\n    }\r\n    else {\r\n      console.warn('API key is not set!')\r\n      console.info('You can get one at https://console.developers.google.com/apis/credentials.')\r\n    }\r\n  },\r\n\r\n\r\n  fetch: (url) => {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => resolve(data))\r\n      .catch(error => reject(error))\r\n    })\r\n  }\r\n}\r\n\r\nwindow.yotoo = yotoo"],"names":["yotoo","get","props","callback","apiKey","getVideoId","videoUrl","id","replace","videoArray","Array","forEach","item","videoId","push","url","ytapi","endpoint","part","idList","index","length","fetch","then","response","video","data","items","title","snippet","description","date","Date","publishedAt","tags","thumb","thumbnails","sd","medium","hd","high","shortUrl","embedUrl","debug","console","log","error","Error","warn","info","Promise","resolve","reject","json","window"],"sourceRoot":""}